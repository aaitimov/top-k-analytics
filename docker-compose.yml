services:
  kafka:
    image: bitnami/kafka:4.0.0
    ports:
      - "9094:9094"
    environment:
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,EXTERNAL://localhost:9094
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=false
    volumes:
      - kafka-data:/bitnami/kafka
    healthcheck:
      test: ["CMD-SHELL", "kafka-topics.sh --bootstrap-server localhost:9092 --list > /dev/null"]
      interval: 10s
      timeout: 5s
      retries: 5
  kafka-init:
    image: bitnami/kafka:4.0.0
    depends_on:
      kafka:
        condition: service_healthy
    entrypoint:
      - "/bin/bash"
      - "-c"
    command: >
      "/opt/bitnami/kafka/bin/kafka-topics.sh \\
        --bootstrap-server kafka:9092 \\
        --create --if-not-exists \\
        --topic song-play-events \\
        --partitions 4 \\
        --replication-factor 1"     
  event-generator:
    build:
      context: ./event-generator
    depends_on:
      kafka:
        condition: service_healthy
      kafka-init:
        condition: service_completed_successfully
    environment:
      KAFKA_TOPIC: "song-play-events"
      KAFKA_BOOTSTRAP_SERVERS: "kafka:9092"
      PRODUCER_THREADS: "4"
      BATCH_SIZE: "1000"
    restart: unless-stopped
  
  kafdrop:
    image: obsidiandynamics/kafdrop:4.2.0
    ports:
      - "9000:9000"
    depends_on:
      kafka:
        condition: service_healthy
    environment:
      KAFKA_BROKERCONNECT: "kafka:9092"
      JVM_OPTS: "-Xms32M -Xmx128M"
      SERVER_SERVLET_CONTEXTPATH: "/"
    restart: unless-stopped

volumes:
  kafka-data:
